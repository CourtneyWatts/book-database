{"version":3,"sources":["images/Banner.jpg","Components/Header.js","Components/Book.js","Components/Books.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","Jumbotron","fluid","style","backgroundImage","Banner","backgroundSize","backgroundPosition","Container","className","Book","props","id","book_pages","book_publication_year","book_title","Books","state","isLoading","itemsPerPage","books","pages","page","getBooks","bind","goToPage","skipBackwardOne","skipBackwardTen","skipForwardOne","skipForwardTen","axios","post","this","then","response","setState","st","data","Math","ceil","count","parseInt","catch","error","console","log","e","target","innerText","history","push","newPage","match","params","num","map","book","active","startingPage","endingPage","items","number","Pagination","Item","onClick","key","width","textAlign","First","Prev","Next","Last","Component","App","exact","path","render","routeProps","Boolean","window","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4486c38c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Banner.7266cf10.jpg\";","import React from 'react'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Container from 'react-bootstrap/Container'\nimport Banner from '../images/Banner.jpg'\nimport '../Components/header.scss'\n\nfunction Header() {\n  return (\n    <Jumbotron\n      fluid\n      style={{\n        backgroundImage: `url(${Banner})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n      }}\n    >\n      <Container>\n        <div className=\"Header p-4\">\n          <h1>The Book Database</h1>\n        </div>\n\n      </Container>\n    </Jumbotron>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport '../Components/book.scss'\n\nconst Book = (props) => {\n  const { id, book_pages, book_publication_year, book_title } = props\n  return (\n    <li className=\"Book d-flex\" >\n          <div className=\"col\">\n              <span className=\"field\">\n                  Title\n              </span>\n              <p>{book_title}</p>\n          </div>\n          <div className=\"col-1\">\n              <span className=\"field\">\n                  Year\n              </span>\n              <p>{book_publication_year}</p>\n          </div>\n          <div className=\"col-1\">\n              <span className=\"field\">\n                  pages\n              </span>\n              <p>{book_pages}</p>\n          </div>\n    </li>\n  )\n}\n\nexport default Book\n","import React, { Component } from 'react'\nimport Book from './Book'\nimport Container from 'react-bootstrap/Container'\nimport axios from 'axios'\nimport Pagination from 'react-bootstrap/Pagination'\n\nclass Books extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      itemsPerPage: 100,\n      books: [],\n      pages: null,\n      page: 1,\n    }\n    this.getBooks = this.getBooks.bind(this)\n    this.goToPage = this.goToPage.bind(this)\n    this.skipBackwardOne = this.skipBackwardOne.bind(this)\n    this.skipBackwardTen = this.skipBackwardTen.bind(this)\n    this.skipForwardOne = this.skipForwardOne.bind(this)\n    this.skipForwardTen = this.skipForwardTen.bind(this)\n  }\n  getBooks(page) {\n    axios\n      .post('http://nyx.vima.ekt.gr:3000/api/books', {\n        page: page,\n        itemsPerPage: this.state.itemsPerPage,\n      })\n      .then((response) => {\n        this.setState((st) => ({\n          books: response.data.books,\n          pages: Math.ceil(response.data.count / st.itemsPerPage),\n          isLoading: false,\n          page: parseInt(page),\n        }))\n      })\n      .catch(function (error) {\n        console.log(error)\n      })\n  }\n  goToPage(e) {\n    const page = e.target.innerText\n    this.props.history.push(`${page}`)\n    this.getBooks(page)\n  }\n  skipBackwardOne() {\n    if (this.state.page <= 1) {\n      return\n    }\n    let newPage = parseInt(this.state.page - 1)\n    this.props.history.push(`${newPage}`)\n    this.getBooks(newPage)\n  }\n  skipBackwardTen() {\n    if (this.state.page <= 1) {\n      return\n    }\n    let newPage = this.state.page - 10\n    newPage = newPage <= 0 ? 1 : newPage\n    this.props.history.push(`${newPage}`)\n    this.getBooks(newPage)\n  }\n  skipForwardOne() {\n    if (this.state.page >= this.state.pages) {\n      return\n    }\n    let newPage = parseInt(this.state.page + 1)\n    this.props.history.push(`${newPage}`)\n    this.getBooks(newPage)\n  }\n  skipForwardTen() {\n    if (this.state.page >= this.state.pages) {\n      return\n    }\n    let newPage = parseInt(this.state.page + 10)\n    console.log(newPage)\n    newPage = newPage >= this.state.pages ? this.state.pages : newPage\n    this.props.history.push(`${newPage}`)\n    this.getBooks(newPage)\n  }\n\n  componentDidMount() {\n    const page = this.props.match.params.num || 1\n    this.getBooks(page)\n  }\n  componentDidUpdate() {\n    console.log('component updated')\n  }\n\n  render() {\n    const books = this.state.books.map((book) => {\n      return <Book {...book} />\n    })\n\n    let active = parseInt(this.props.match.params.num || 1)\n    let startingPage = active >= 5 ? active - 2 : 1\n    let endingPage = active >= 5 ? active + 2 : 5\n    if (endingPage >= this.state.pages) {\n      startingPage = this.state.pages - 4\n      endingPage = this.state.pages\n    }\n\n    let items = []\n    for (let number = startingPage; number <= endingPage; number++) {\n      items.push(\n        <Pagination.Item\n          onClick={number != active && this.goToPage}\n          key={number}\n          active={number == active}\n          style={{ width: '45px', textAlign: 'center' }}\n        >\n          {number}\n        </Pagination.Item>\n      )\n    }\n    // Condition added to stop the navigation rendering while the first api call is sent\n    if (this.state.books[0]) {\n      return (\n        <Container>\n          <Pagination className='justify-content-end mb-5'>\n            <Pagination.First onClick={this.skipBackwardTen} />\n            <Pagination.Prev onClick={this.skipBackwardOne} />\n            {items}\n            <Pagination.Next onClick={this.skipForwardOne} />\n            <Pagination.Last onClick={this.skipForwardTen} />\n          </Pagination>\n          <ul className='p-0 mt-5 mb-5 Books'>{books}</ul>\n          <Pagination className='justify-content-end mb-5'>\n            <Pagination.First onClick={this.skipBackwardTen} />\n            <Pagination.Prev onClick={this.skipBackwardOne} />\n            {items}\n            <Pagination.Next onClick={this.skipForwardOne} />\n            <Pagination.Last onClick={this.skipForwardTen} />\n          </Pagination>\n        </Container>\n      )\n    } else {\n      return <Container></Container>\n    }\n  }\n}\n\nexport default Books\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport Header from './Components/Header'\nimport Books from './Components/Books'\n\nfunction App() {\n  return (\n    <div className='App'>\n      <div className='small-screen-text d-flex-col text-center p-5'>\n        <p>Browser window is too small</p>\n        <p className='pt-4'>Please open on a desktop browser</p>\n        <p className='pt-4'>\n          {' '}\n          If you are using a desktop browser, please resize your browser window\n        </p>\n      </div>\n      <div className='database'>\n        <Header />\n        <Switch>\n          <Route\n            exact\n            path='/'\n            render={(routeProps) => <Books {...routeProps} />}\n          />\n          <Route\n            exact\n            path='/:num'\n            render={(routeProps) => <Books {...routeProps} />}\n          />\n        </Switch>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport './App.scss'\nimport App from './App'\nimport { HashRouter } from 'react-router-dom'\n\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}